# STRIPE LIVE KEY PLACEHOLDER
# DO NOT COMMIT ACTUAL KEYS TO VERSION CONTROL

# This file serves as a template for the actual Stripe live key
# The real key should be stored in your secure secret management system

# Format: sk_live_[alphanumeric_string]
# Example: sk_live_abcdef123456789

# Secret Management Best Practices:
# 1. Store in environment-specific secret manager (AWS Secrets Manager, HashiCorp Vault, etc.)
# 2. Use different keys for each environment
# 3. Rotate keys regularly (every 90 days recommended)
# 4. Implement key access logging
# 5. Use least privilege access control

# Environment Variables:
# STRIPE_PUBLISHABLE_KEY_LIVE=pk_live_xxxxxxxxxxxxx
# STRIPE_SECRET_KEY_LIVE=sk_live_xxxxxxxxxxxxx
# STRIPE_WEBHOOK_SECRET_LIVE=whsec_xxxxxxxxxxxxx

# Key Rotation Process:
# 1. Generate new key in Stripe Dashboard
# 2. Update secret in secret manager
# 3. Deploy to staging first
# 4. Monitor for issues (24 hours)
# 5. Deploy to production
# 6. Deactivate old key after 7 days

# Access Control:
# - DevOps Team: Read/Write access to secret manager
# - Backend Services: Read-only access via IAM role
# - CI/CD Pipeline: Temporary read access during deployment
# - Developers: No direct access to production keys

# Monitoring:
# - Alert on key usage anomalies
# - Track API request patterns
# - Monitor failed authentication attempts
# - Log all key rotations

# Emergency Procedures:
# In case of key compromise:
# 1. Immediately revoke the compromised key in Stripe Dashboard
# 2. Generate new keys
# 3. Update all services
# 4. Review access logs for unauthorized usage
# 5. File security incident report

# Testing:
# Use test keys for all non-production environments:
# - Development: sk_test_xxxxxxxxxxxxx
# - Staging: sk_test_xxxxxxxxxxxxx (different from dev)
# - Production: sk_live_xxxxxxxxxxxxx (only)